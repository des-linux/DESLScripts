#!/bin/sh
#//////////////////////////////////////////////////
#//DESLinux DSLoader.d :: System Loader
#//	(C)2014-2025 Dark Embedded Systems.
#//	http://e.xprj.net/
#//////////////////////////////////////////////////

Main(){
#	InstallCoreTools;
	MountSpecialFS;
	PatchRootFS;

	return 0;
}

InstallCoreTools(){
	local CT='/bin/busybox';
	local CT0='/mnt/coretools0';

	${CT} mkdir -p /mnt
	${CT} mount -t tmpfs tmpfs://DESL0/mnt /mnt
	[ ! "${?}" = '0' ] && {
		echo "Failed to mount /mnt" >&3
		exit 1;
	}

	${CT} mkdir -p ${CT0}
	${CT} mount -t tmpfs tmpfs://DESL0/coretools0 ${CT0}
	[ ! "${?}" = '0' ] && {
		echo "Failed to mount ${CT0}" >&3
		exit 1;
	}

	${CT} mkdir -p ${CT0}/bin
	${CT} mkdir -p ${CT0}/sbin
	${CT} cp ${CT} ${CT0}/${CT}
	${CT} chroot ${CT0} ${CT} --install -s
	[ ! "${?}" = '0' ] && {
		echo "Failed to install core tools." >&3
		exit 1;
	}

	return 0;
}

PatchRootFS(){
	set -- `cat /proc/version`
	local KVER="${3}";
	[ ! -e "/lib/modules/${KVER}/modules.dep" ] && depmod -a
	return 0;
}

CheckMounted(){
	local To=${1};
	local From=${2};
	local Type=${3};

	local IFS=$'\r\n';
	for m in `cat /proc/mounts`; do
		IFS=$' ';
		set - ${m}
		# ${Val:+XXX} = 'XXX' if 'Val' has value.
		[ "${To}@${From}@${Type}" = "${2}@${From:+${1}}@${Type:+${3}}" ] && return 0;
	done

	# No match
	return 1;
}

MountOnce(){ # src, target, fs
	local From=${1};
	local To=${2};
	local Type=${3};
	local Opts=${4};

	echo "I: Mounting ${To} ..."

	case "${Type}" in
		"proc")	[ -e "${To}/self" ] && return 0;;
		*)	CheckMounted "${To}" "${From}" "${Type}" && return 0;;
	esac

	mkdir -p "${To}"
	mount ${Type:+-t "${Type}"} "${From}" "${To}" ${Opts:+-o ${Opts}} && return 0;

	return 1;
}

RBindOnce(){ # src, target
	local From=${1};
	local To=${2};

	echo "I: Binding ${To} ..."
	CheckMounted "${To}" && return 0;

	mkdir -p "${To}"
	mount -o rbind "${From}" "${To}" && return 0;

	return 1;
}

MountSpecialFS(){
	MountOnce proc://DESL0/ /proc proc
	MountOnce sysfs://DESL0/ /sys sysfs
	MountOnce tmp://DESL0/ /mnt tmpfs
	MountOnce tmp://DESL0/ /tmp tmpfs
	MountOnce dev://DESL0/ /dev devtmpfs || MountOnce dev://DESL0/ /dev tmpfs size=1m
	MountOnce devpts://DESL0/ /dev/pts devpts

#	RBindOnce /DRoot/DarkSystem/dev /dev
#	RBindOnce /DRoot/DarkSystem/tmp /tmp
	return 0;
}

Main "${@}";
