#!/bin/sh
#//////////////////////////////////////////////////
#//DESLinux DSLoader.d :: System Loader
#//	(C)2014-2025 Dark Embedded Systems.
#//	http://e.xprj.net/
#//////////////////////////////////////////////////
PREVCNT=65535;

Main(){
	LoadDriversLite;
	RegisterDev scan
	return 0;
}

CheckExec(){
	"${1}" --help
	[ "${?}" = '127' ] && {
		echo "${1} is not found." >&3
		exit 20;
	}
	return 0;
}

CheckDependencies(){
	# CheckExec 'devmm2name'
	return 0;
}

RegisterDev(){
	# Using devtmpfs or already registered
	[ -e '/dev/null' ] && return 0;
	[ -e '/dev/zero' ] && return 0;

	# 'devManager' method (ROM after 2020/05/01)
	/DRoot/DarkSystem/bin/devManager ${1} && return 0;
	devManager ${1} && return 0;

	# 'devmm2name' method (ROM after 2019/05/01)
	DEVMM2NAME_MTDBLOCK_MAJOR=31 devmm2name ${1} && return 0;

	# Simple method (for MTD devices only)
	RegisterDevMTD && return 0;

	return 127;
}

RegisterDevMTD(){
	for d in /sys/block/mtdblock*; do
		DEV=`cat ${d}/dev`;
		eval mknod /dev/${d##/*/} b ${DEV//:/ } 2>/dev/null
	done

	# Check USB existence
	ls /sys/block/sd* >/dev/null 2>&1 || return 127;
	for d in /sys/block/sd*; do
		DEV=`cat ${d}/dev`;
		eval mknod /dev/${d##/*/} b ${DEV//:/ } 2>/dev/null

		for p in ${d}/sd*; do
			DEV=`cat ${p}/dev`;
			eval mknod /dev/${p##/*/} b ${DEV//:/ } 2>/dev/null
		done
	done
	return 0;
}

CheckRedetectRequired(){
	local CNT=0;
	local IFS=$'\r\n';

	for m in `lsmod`; do
		CNT=$((CNT+1));
	done

	[ "${CNT}" = "${PREVCNT}" ] && {
		PREVCNT=${CNT};
		return 0;
	}

	PREVCNT=${CNT};
	return 1;
}

DetectAndLoadDevices(){
	for m in /sys/bus/*/devices/*/modalias; do
		modprobe `cat ${m}`
	done
	return 0;
}

LoadDrivers(){
	echo 'I: Loading drivers...'
	depmod -a

	while ! CheckRedetectRequired; do
		DetectAndLoadDevices
	done
	return 0;
}



DetectAndLoadDevicesLite(){
	/sbin/kmodloader

	for l in /lib/modules/*/*.ko; do
		l=${l##*/};
		modprobe "${l%%.*}"
	done

	return 0;
}

LoadDriversLite(){
	echo 'I: Loading drivers...'
	while ! CheckRedetectRequired; do
		DetectAndLoadDevicesLite;
	done

	return 0;
}

Main "${@}";
