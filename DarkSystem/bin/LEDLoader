#!/bin/sh
#//////////////////////////////////////////////////
#//DESLinux LED Configurator
#//	(C)2014-2025 Dark Embedded Systems.
#//	http://e.xprj.net/
#//////////////////////////////////////////////////
SELF=`readlink -f ${0}`
sRoot=${SELF%/*};

sRoot=/DRoot/DarkSystem/bin
. ${sRoot}/ConfigManager.sh
. ${sRoot}/ArgsParser.sh

Main(){
	local IFS;
	local LED='/sys/class/leds';
	local BASE="${LED_DIR:-/tmp/DLEDLoader}";
	local ByName="${BASE}/Name";
	local ByOrder="${BASE}/Order";

	info "DESLinux LED Configurator"
	info "	(C)2017-2025 Dark Network Systems"
	info "	http://e.xprj.net/"

	local CONF=${ARGS_OPT_LONG_Config:-${sRoot}/../conf/LED.conf};

	[ ! -e "${LED}" ] && {
		error "No LED support on this system."
		return 1;
	}

	ParseArgs "${@}"

	case "${ARGS_FIRST_CMD}" in
		Initialize | initialize)
			InitLED
			MakeLEDDir
			return 0;;
		SetLED | setLED | setled)
			SetLED
			return 0;;
	esac

	# Default
	InitLED
	MakeLEDDir
	SetLED

	return 0;
}

InitLED(){
	info "Initializing LED..."
	local IFS=$'\n\r';
	for a in `ls ${LED}`; do
		echo 'none' > ${LED}/${a}/trigger
	done
	return 0;
}

MakeLEDDir(){
	local IFS K V;
	rm -rf "${BASE}"
	mkdir -p "${BASE}"
	[ ! -e "${BASE}" ] && return 1;

	mkdir -p "${ByName}"
	IFS=$'\n\r';
	for a in `ConfigFileList "${CONF}" Name`; do
		K=${a%%=*};
		V=${a#*=};
		info "LED Name: ${K} -> ${V}"
		ln -s "${LED}/${V}" "${ByName}/${K}"
	done

	mkdir -p "${ByOrder}"
	IFS=$'\n\r';
	local N=0;
	for a in `ConfigFileList "${CONF}" Order`; do
		info "LED Order[$((N))] -> ${a}"
		ln -s "${ByName}/${a}" "${ByOrder}/$((N))"
		N=$((N+1));
	done
	return 0;
}

SetLED(){
	local K V L;
	local IFS=$'\n\r';

	set -f
	for a in `ConfigFileList "${CONF}" LED`; do
		K="${a%%=*}";
		V="${a#*=}";
		L="${ByName}/${K}";
		IFS='/';
		set -- ${V}

		echo 'none' > ${L}/trigger

		echo "${1}" > ${L}/trigger
		case "${1}" in
			on )
				echo 'default-on' > ${L}/trigger
			;;
			netdev )
				echo "${2}" > ${L}/device_name
				if [ -e "${L}/mode" ]; then
					echo "${3}" > ${L}/mode
				else
					IFS=' ';
					for l in ${3}; do
						echo '1' > ${L}/${l}
					done
				fi
			;;
			timer )
				echo "${2:-500}" > ${L}/delay_on
				echo "${3:-500}" > ${L}/delay_off
			;;
			switch* )
				echo "${2}" > ${L}/port_mask
				echo "${3:-15}" > ${L}/speed_mask
			;;
			usbport )
				shift 1
				IFS=$' \n\r';
				if [ "${1}" = '*' ]; then
					set +f
					for p in ${L}/ports/*; do
						echo '1' > ${p}
					done
					set -f
				else
					for p in ${*}; do
						echo '1' > ${L}/ports/${p}
					done
				fi
			;;
		esac
	done
	set +f

	return 0;
}

error(){ echo -e "\e[31;1mE:\e[m\e[1m ${*}\e[m" >&2; }
warning(){ echo -e "\e[33;1mW:\e[m\e[1m ${*}\e[m" >&2; }
infoex(){ echo -e "\e[m\e[1mI:\e[m\e[1m ${*}\e[m"; }
info(){ echo -e "I: ${*}"; }

Main "${@}";
